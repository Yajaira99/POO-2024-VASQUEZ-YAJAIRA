import tkinter as tk
from tkinter import messagebox

class Aplicacion:
    def __init__(self, root):
        self.root = root
        self.root.title("Aplicación de Gestión de Información")
        
        # Crear los frames
        self.frame_principal = tk.Frame(root)
        self.frame_configuracion = tk.Frame(root)
        
        # Configurar la página principal
        self.crear_pagina_principal()
        
        # Configurar la página de configuración
        self.crear_pagina_configuracion()
        
        # Mostrar la página principal inicialmente
        self.mostrar_pagina(self.frame_principal)

    def crear_pagina_principal(self):
        # Etiqueta
        self.label = tk.Label(self.frame_principal, text="Ingrese la información:")
        self.label.pack(pady=5)
        
        # Campo de texto
        self.entry = tk.Entry(self.frame_principal, width=50)
        self.entry.pack(pady=5)
        
        # Botón "Agregar"
        self.btn_agregar = tk.Button(self.frame_principal, text="Agregar", command=self.agregar_dato)
        self.btn_agregar.pack(pady=5)
        
        # Lista para mostrar datos
        self.listbox = tk.Listbox(self.frame_principal, width=50, height=10)
        self.listbox.pack(pady=5)
        
        # Botón "Limpiar"
        self.btn_limpiar = tk.Button(self.frame_principal, text="Limpiar", command=self.limpiar_datos)
        self.btn_limpiar.pack(pady=5)
        
        # Botón para cambiar a configuración
        self.btn_configuracion = tk.Button(self.frame_principal, text="Ir a Configuración", command=lambda: self.mostrar_pagina(self.frame_configuracion))
        self.btn_configuracion.pack(pady=5)

    def crear_pagina_configuracion(self):
        # Ejemplo de configuración
        self.label_configuracion = tk.Label(self.frame_configuracion, text="Configuración")
        self.label_configuracion.pack(pady=5)
        
        # Botón para volver a la página principal
        self.btn_volver = tk.Button(self.frame_configuracion, text="Volver a Principal", command=lambda: self.mostrar_pagina(self.frame_principal))
        self.btn_volver.pack(pady=5)

    def agregar_dato(self):
        dato = self.entry.get()
        if dato:
            self.listbox.insert(tk.END, dato)
            self.entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Advertencia", "El campo de texto está vacío.")

    def limpiar_datos(self):
        self.entry.delete(0, tk.END)
        self.listbox.delete(0, tk.END)

    def mostrar_pagina(self, pagina):
        self.frame_principal.pack_forget()
        self.frame_configuracion.pack_forget()
        pagina.pack(fill="both", expand=True)

if __name__ == "__main__":
    root = tk.Tk()
    app = Aplicacion(root)
    root.mainloop()
